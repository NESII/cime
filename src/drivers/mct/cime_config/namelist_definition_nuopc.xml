<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="namelist_definition.xsl"?>

<entry_id version="2.0">

  <entry id="CESM_component_list">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_components_var</group>
    <values>
      <value>ATM OCN ICE LND ROF MED</value>
    </values>
  </entry>

  <entry id="Verbosity@DRIVER_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>DRIVER_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="cime_model" modify_via_xml="CIME_MODEL">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values>cesm</valid_values>
    <desc>cime model</desc>
    <values>
      <value cime_model='cesm'>cesm</value>
    </values>
  </entry>

  <entry id="case_name" modify_via_xml="CASE">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>case name.</desc>
    <values>
      <value>$CASE</value>
    </values>
  </entry>

  <entry id="case_desc" modify_via_xml="CASESTR">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>case description.</desc>
    <values>
    <value>$CASESTR</value>
    </values>
  </entry>

  <entry id="username" modify_via_xml="USER">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>username documentation</desc>
    <values>
      <value>$USER</value>
    </values>
  </entry>

  <entry id="hostname" modify_via_xml="MACH">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>hostname information</desc>
    <values>
      <value>$MACH</value>
    </values>
  </entry>

  <entry id="timing_dir">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      location of timing output.
    </desc>
    <values>
      <value>./timing</value>
    </values>
  </entry>

  <entry id="tchkpt_dir">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      location of timing checkpoint output.
    </desc>
    <values>
      <value>./timing/checkpoints</value>
    </values>
  </entry>

  <entry id="start_type" modify_via_xml="RUN_TYPE">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values>startup,branch,continue</valid_values>
    <desc>
      mode to start the run up, [startup,branch,continue],
      automatically derived from RUN_TYPE in env_run.xml
    </desc>
    <values>
      <value run_type="startup" continue_run=".false.">startup</value>
      <value run_type="hybrid"  continue_run=".false.">startup</value>
      <value run_type="branch"  continue_run=".false.">branch</value>
      <value run_type="startup" continue_run=".true.">continue</value>
      <value run_type="hybrid"  continue_run=".true.">continue</value>
      <value run_type="branch"  continue_run=".true.">continue</value>
    </values>
  </entry>

  <entry id="brnch_retain_casename" modify_via_xml="RUN_REFCASE">
    <type>logical</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      Allow same branch casename as reference casename. If $CASE and $REFCASE are the same and the start_type is
      not startup, then the value of brnch_retain_casename is set to .true.
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="info_debug" modify_via_xml="INFO_DBUG">
    <type>integer</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      Level of debug output, 0=minimum, 1=normal, 2=more, 3=too much (default: 1)
    </desc>
    <values>
      <value>$INFO_DBUG</value>
    </values>
  </entry>

  <entry id="bfbflag" modify_via_xml="BFBFLAG">
    <type>logical</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on bfb option in coupler which produce bfb results in the
      coupler on different processor counts.  (default: .false.)
    </desc>
    <values>
      <value>$BFBFLAG</value>
    </values>
  </entry>

  <entry id="orb_mode">
    <type>char</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <valid_values>fixed_year,variable_year,fixed_parameters</valid_values>
    <desc>
      orbital model setting.  this sets how the orbital mode will be
      configured.
      "fixed_year" uses the orb_iyear and other orb inputs are ignored.  In
      this mode, the orbital parameters are constant and based on the year.
      "variable_year" uses the orb_iyear and orb_iyear_align.  In this mode,
      the orbital parameters vary as the model year advances and the model
      year orb_iyear_align has the equivalent orbital year of orb_iyear.
      "fixed_parameters" uses the orb_eccen, orb_mvelp, and orb_obliq to set
      the orbital parameters which then remain constant through the model
      integration. [fixed_year, variable_year, fixed_parameters]  (default: 'fixed_year'.)
    </desc>
    <values>
      <value>fixed_year</value>
    </values>
  </entry>

  <entry id="orb_iyear_align">
    <type>integer</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <desc>
      model year associated with orb_iyear when orb_mode is variable_year. (default: 1990)
    </desc>
    <values>
      <value>1990</value>
    </values>
  </entry>

  <entry id="orb_iyear">
    <type>integer</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <desc>
      year of orbit, used when orb_mode is fixed_year or variable_year. (default: 1990)
    </desc>
    <values>
      <value>1990</value>
    </values>
  </entry>

  <entry id="orb_eccen">
    <type>real</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <desc>
      eccentricity of orbit, used when orb_mode is fixed_parameters.
      default: SHR_ORB_UNDEF_REAL (1.e36) (Not currently used in build-namelist)
    </desc>
    <values>
      <value>1.e36</value>
    </values>
  </entry>

  <entry id="orb_mvelp">
    <type>real</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <desc>
      location of vernal equinox in longitude degrees, used when orb_mode is fixed_parameters.
      default: SHR_ORB_UNDEF_REAL (1.e36)(Not currently used in build-namelist)
    </desc>
    <values>
      <value>1.e36</value>
    </values>
  </entry>

  <entry id="orb_obliq">
    <type>real</type>
    <category>orbital</category>
    <group>DRIVER_attributes</group>
    <desc>
      obliquity of orbit in degrees, used when orb_mode is fixed_parameters.
      default: SHR_ORB_UNDEF_REAL (1.e36) (Not currently used in build-namelist)
    </desc>
    <values>
      <value>1.e36</value>
    </values>
  </entry>

  <entry id="wv_sat_scheme">
    <type>char</type>
    <category>wv_sat</category>
    <group>DRIVER_attributes</group>
    <valid_values>GoffGratch,MurphyKoop,Bolton,Flatau</valid_values>
    <desc>
      Type of water vapor saturation vapor pressure scheme employed. 'GoffGratch' for
      Goff and Gratch (1946); 'MurphyKoop' for Murphy and Koop (2005); 'Bolton' for
      Bolton (1980); 'Flatau' for Flatau, Walko, and Cotton (1992).
      Default: GoffGratch
    </desc>
    <values>
      <value>GoffGratch</value>
    </values>
  </entry>

  <entry id="wv_sat_transition_start">
    <type>real</type>
    <category>wv_sat</category>
    <group>DRIVER_attributes</group>
    <desc>
      Width of the liquid-ice transition range in mixed-phase water saturation vapor
      pressure calculations. The range always ends at 0 degrees Celsius, so this
      variable only affects the start of the transition.
      Default: 20K
      WARNING: CAM is tuned to the default value of this variable. Because it affects
      so many different parameterizations, changes to this variable may require a
      significant retuning of CAM's cloud physics to give reasonable results.
    </desc>
    <values>
      <value>20.0D0</value>
    </values>
  </entry>

  <entry id="wv_sat_use_tables">
    <type>logical</type>
    <category>wv_sat</category>
    <group>DRIVER_attributes</group>
    <desc>
      Whether or not to produce lookup tables at init time to use as a cache for
      saturation vapor pressure.
      Default: .false.
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="wv_sat_table_spacing">
    <type>real</type>
    <category>wv_sat</category>
    <group>DRIVER_attributes</group>
    <desc>
      Temperature resolution of saturation vapor pressure lookup tables in Kelvin.
      (This is only used if wv_sat_use_tables is .true.)
      Default: 1.0
    </desc>
    <values>
      <value>1.0D0</value>
    </values>
  </entry>

  <entry id="tfreeze_option" modify_via_xml="TFREEZE_SALTWATER_OPTION">
    <type>char</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <desc>Freezing point calculation for salt water.</desc>
    <values>
      <value>$TFREEZE_SALTWATER_OPTION</value>
    </values>
  </entry>

  <entry id="flux_epbal" modify_via_xml="CPL_EPBAL">
    <type>char</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <valid_values>off,ocn</valid_values>
    <desc>
      Only used for C,G compsets: if ocn, ocn provides EP balance factor for precip
    </desc>
    <values>
      <value>$CPL_EPBAL</value>
    </values>
  </entry>

  <entry id="flux_albav" modify_via_xml="CPL_ALBAV">
    <type>logical</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <desc>
      Only used for C,G compsets: if true, compute albedos to work with daily avg SW down
    </desc>
    <values>
      <value>$CPL_ALBAV</value>
    </values>
  </entry>

  <entry id="glc_renormalize_smb">
    <type>char</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <valid_values>on,off,on_if_glc_coupled_fluxes</valid_values>
    <desc>
      Whether to renormalize the surface mass balance (smb) sent from lnd to glc so that the
      global integral on the glc grid agrees with the global integral on the lnd grid.

      Unlike most fluxes, smb is remapped with bilinear rather than conservative mapping weights,
      so this option is needed for conservation. However, conservation is not required in many
      cases, since we often run glc as a diagnostic (one-way-coupled) component.

      Allowable values are:
      'on': always do this renormalization
      'off': never do this renormalization (see WARNING below)
      'on_if_glc_coupled_fluxes': Determine at runtime whether to do this renormalization.
         Does the renormalization if we're running a two-way-coupled glc that sends fluxes
         to other components (which is the case where we need conservation).
         Does NOT do the renormalization if we're running a one-way-coupled glc, or if
         we're running a glc-only compset (T compsets).
         (In these cases, conservation is not important.)

      Only used if running with a prognostic GLC component.

      WARNING: Setting this to 'off' will break conservation when running with an
      evolving, two-way-coupled glc.
    </desc>
    <values>
      <value>on_if_glc_coupled_fluxes</value>
    </values>
  </entry>

  <entry id="wall_time_limit">
    <type>real</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <desc>
      Wall time limit for run
      default: -1.0
    </desc>
    <values>
      <value>-1.0</value>
    </values>
  </entry>

  <entry id="force_stop_at">
    <type>char</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <valid_values>day,month,year</valid_values>
    <desc>
      Force stop at the next month, day, etc when wall_time_limit is hit
      default: month
    </desc>
    <values>
      <value>month</value>
    </values>
  </entry>

  <entry id="flux_diurnal">
    <type>logical</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <desc>
      If true, turn on diurnal cycle in computing atm/ocn fluxes
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="gust_fac">
    <type>real</type>
    <category>control</category>
    <group>DRIVER_attributes</group>
    <desc>
      wind gustiness factor
    </desc>
    <values>
      <value>0.0D0</value>
    </values>
  </entry>

  <entry id="atm_gnam" modify_via_xml="ATM_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      ATM_GRID values passed into driver.
    </desc>
    <values>
      <value>$ATM_GRID</value>
    </values>
  </entry>

  <entry id="lnd_gnam" modify_via_xml="LND_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      LND_GRID values passed into driver.
    </desc>
    <values>
      <value>$LND_GRID</value>
    </values>
  </entry>

  <entry id="ocn_gnam" modify_via_xml="OCN_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      OCN_GRID values passed into driver.
    </desc>
    <values>
      <value>$OCN_GRID</value>
    </values>
  </entry>

  <entry id="ice_gnam" modify_via_xml="ICE_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      ICE_GRID values passed into driver.
    </desc>
    <values>
      <value>$ICE_GRID</value>
    </values>
  </entry>

  <entry id="rof_gnam" modify_via_xml="ROF_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      ROF_GRID values passed into driver.
    </desc>
    <values>
      <value>$ROF_GRID</value>
    </values>
  </entry>

  <entry id="glc_gnam" modify_via_xml="GLC_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      GLC_GRID values passed into driver.
    </desc>
    <values>
      <value>$GLC_GRID</value>
    </values>
  </entry>

  <entry id="wav_gnam" modify_via_xml="WAV_GRID">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      WAV_GRID values passed into driver.
    </desc>
    <values>
      <value>$WAV_GRID</value>
    </values>
  </entry>

  <entry id="shr_map_dopole">
    <type>logical</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      invoke pole averaging corrections in shr_map_mod weights generation (default: true)
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="vect_map" modify_via_xml="VECT_MAP">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,npfix,cart3d,cart3d_diag,cart3d_uvw,cart3d_uvw_diag</valid_values>
    <desc>
      vect_map
      turns on the vector mapping option for u and v vector mapping between
      atm and ocean grids in the coupler.  the options are none, npfix,
      cart3d, cart3d_diag, cart3d_uvw, and cart3d_uvw_diag.  the none option
      results in scalar mapping independently for the u and v field which
      tends to generate large errors near the poles.  npfix is the
      traditional option where the vectors are corrected on the ocean grid
      north of the last latitude line of the atmosphere grid.  the cart3d
      options convert the east (u) and north (v) vectors to 3d (x,y,z)
      triplets, and maps those fields before converting back to the east (u)
      and north (v) directions.  the cart3d ignores the resuling "w"
      velocity.  the cart3d_uvw calculates the resulting u and v vectors by
      preserving the total "u,v,w" speed and the angle of the (u,v) vector.
      the _diag options just add diagnotics to the log file about the vector
      mapping.
    </desc>
    <values>
      <value>$VECT_MAP</value>
    </values>
  </entry>

  <entry id="aoflux_grid">
    <type>char</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <valid_values>ocn,atm,exch</valid_values>
    <desc>
      Grid for atm ocn flux calc (untested)
      default: ocn
    </desc>
    <values>
      <value>ocn</value>
    </values>
  </entry>

  <entry id="mct_usealltoall">
    <type>logical</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      mct alltoall mapping flag
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="mct_usevector">
    <type>logical</type>
    <category>mapping</category>
    <group>DRIVER_attributes</group>
    <desc>
      mct vector flag
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="cpl_decomp" modify_via_xml="CPL_DECOMP">
    <type>integer</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3,4,5,6</valid_values>
    <desc>
      cpl decomp option (0=default, 1=comp decomp, 2=rearr comp decomp, 3=new single 1d seg
      default: 0
    </desc>
    <values>
      <value>$CPL_DECOMP</value>
    </values>
  </entry>

  <entry id="cpl_seq_option" modify_via_xml="CPL_SEQ_OPTION">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values>CESM1_ORIG,CESM1_MOD,CESM1_ORIG_TIGHT,CESM1_MOD_TIGHT,RASM_OPTION1,RASM_OPTION2</valid_values>
    <desc>
      Set the coupler sequencing.
    </desc>
    <values>
      <value>$CPL_SEQ_OPTION</value>
    </values>
  </entry>

  <entry id="cpl_cdf64">
    <type>logical</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <desc>
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="do_budgets" modify_via_xml="BUDGETS">
    <type>logical</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <desc>
      logical that turns on diagnostic budgets, false means budgets will never be written
    </desc>
    <values>
      <value>$BUDGETS</value>
    </values>
  </entry>

  <entry id="do_histinit">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      logical to write an extra initial coupler history file
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="budget_inst">
    <type>integer</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the instantaneous budgets. [0,1,2,3],
      written only if BUDGETS variable is true
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets
      default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="budget_daily">
    <type>integer</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the daily budgets. [0,1,2,3],
      written only if do_budgets variable is .true.,
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets
      default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="budget_month">
    <type>integer</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the monthy budgets. [0,1,2,3],
      written only if do_budgets variable is .true.,
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets
      default: 1
    </desc>
    <values>
      <value>1</value>
    </values>
  </entry>

  <entry id="budget_ann">
    <type>integer</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the annual budgets. [0,1,2,3],
      written only if do_budgets variable is .true.,
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets
      default: 1
    </desc>
    <values>
      <value>1</value>
    </values>
  </entry>

  <entry id="budget_ltann">
    <type>integer</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the longterm budgets written at the end
      of the year. [0,1,2,3],
      written only if do_budgets variable is .true.,
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets,
      default: 1
    </desc>
    <values>
      <value>1</value>
    </values>
  </entry>

  <entry id="budget_ltend">
    <type>integer</type>
    <category>budget</category>
    <group>DRIVER_attributes</group>
    <valid_values>0,1,2,3</valid_values>
    <desc>
      sets the diagnotics level of the longterm budgets written at the end
      of each run. [0,1,2,3],
      written only if do_budgets variable is .true.,
      0=none,
      1=+net summary budgets,
      2=+detailed lnd/ocn/ice component budgets,
      3=+detailed atm budgets,
      default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>


  <entry id="histaux_a2x">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for instantaneous atm to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_a2x1hr">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for 1-hour average atm to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_a2x1hri">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for 1-hour instantaneous atm to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_a2x3hr">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for 3-hour average atm to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_a2x3hrp">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for 3-hour average atm to coupler precip fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_a2x24hr">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for daily average atm to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_l2x">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for instantaneous land to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_r2x">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for instantaneous runoff to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histaux_l2x1yr">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on coupler history stream for annual sno to coupler fields.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="histavg_atm">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes atm fields in coupler average history files.
      default: true
    </desc>
    <values>
	<value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_lnd">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes lnd fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_ocn">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes ocn fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_ice">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes ice fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_rof">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes rof fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_glc">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes glc fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_wav">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes wav fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="histavg_xao">
    <type>logical</type>
    <category>history</category>
    <group>DRIVER_attributes</group>
    <desc>
      writes xao fields in coupler average history files.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="drv_threading" modify_via_xml="DRV_THREADING">
    <type>logical</type>
    <category>performance</category>
    <group>DRIVER_attributes</group>
    <desc>
      turn on run time control of threading per pe per component by the driver
      default: false
    </desc>
    <values>
      <value>$DRV_THREADING</value>
    </values>
  </entry>

  <entry id="run_barriers" modify_via_xml="COMP_RUN_BARRIERS">
    <type>logical</type>
    <category>performance</category>
    <group>DRIVER_attributes</group>
    <desc>
      default: .false.
    </desc>
    <values>
      <value>$COMP_RUN_BARRIERS</value>
    </values>
  </entry>

  <entry id="eps_frac" modify_via_xml="EPS_FRAC">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in fractions in domain checking
      default: 1.0e-02
    </desc>
    <values>
      <value>$EPS_FRAC</value>
    </values>
  </entry>

  <entry id="eps_amask" modify_via_xml="EPS_AMASK">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in atm/land masks in domain checking
      default: 1.0e-13
    </desc>
    <values>
      <value>$EPS_AMASK</value>
    </values>
  </entry>

  <entry id="eps_agrid" modify_via_xml="EPS_AGRID">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in atm/land lat/lon in domain checking
      default: 1.0e-12
    </desc>
    <values>
      <value>$EPS_AGRID</value>
    </values>
  </entry>

  <entry id="eps_aarea" modify_via_xml="EPS_AAREA">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in atm/land areas in domain checking
      default: 1.0e-07
    </desc>
    <values>
      <value>$EPS_AAREA</value>
    </values>
  </entry>

  <entry id="eps_omask" modify_via_xml="EPS_OMASK">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in ocean/ice masks in domain checking
      default: 1.0e-06
    </desc>
    <values>
      <value>$EPS_OMASK</value>
    </values>
  </entry>

  <entry id="eps_ogrid" modify_via_xml="EPS_OGRID">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in ocean/ice lon/lat in domain checking
      default: 1.0e-2
    </desc>
    <values>
      <value>$EPS_OGRID</value>
    </values>
  </entry>

  <entry id="eps_oarea" modify_via_xml="EPS_OAREA">
    <type>real</type>
    <category>domain_check</category>
    <group>DRIVER_attributes</group>
    <desc>
      Error tolerance for differences in ocean/ice lon/lat in domain checking
      default: 1.0e-1
    </desc>
    <values>
      <value>$EPS_OAREA</value>
    </values>
  </entry>

  <entry id="single_column" modify_via_xml="PTS_MODE">
    <type>logical</type>
    <category>DRIVER_attributes</category>
    <group>DRIVER_attributes</group>
    <desc>
      turns on single column mode. set by PTS_MODE in env_case.xml, default: false
    </desc>
    <values>
      <value>.false.</value>
      <value single_column="true">.true.</value>
    </values>
  </entry>

  <entry id="scmlat" modify_via_xml="PTS_LAT">
    <type>real</type>
    <category>DRIVER_attributes</category>
    <group>DRIVER_attributes</group>
    <desc>
      grid point latitude associated with single column mode.
      if set to -999, ignore this value
    </desc>
    <values>
      <value>-999.</value>
      <value single_column="true">$PTS_LAT</value>
    </values>
  </entry>

  <entry id="scmlon" modify_via_xml="PTS_LON">
    <type>real</type>
    <category>DRIVER_attributes</category>
    <group>DRIVER_attributes</group>
    <desc>
      grid point longitude associated with single column mode.
      set by PTS_LON in env_run.xml.
    </desc>
    <values>
      <value>-999.</value>
      <value single_column="true">$PTS_LON</value>
    </values>
  </entry>

  <entry id="reprosum_use_ddpdd">
    <type>logical</type>
    <category>reprosum</category>
    <group>DRIVER_attributes</group>
    <desc>
      Use faster method for reprosum, but one where reproducibility is not always guaranteed.
      default: .false.
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="reprosum_diffmax">
    <type>real</type>
    <category>reprosum</category>
    <group>DRIVER_attributes</group>
    <desc>
      Tolerance for relative error
      default: -1.0e-8
    </desc>
    <values>
      <value>-1.0e-8</value>
    </values>
  </entry>

  <entry id="reprosum_recompute">
    <type>logical</type>
    <category>reprosum</category>
    <group>DRIVER_attributes</group>
    <desc>
      Recompute with non-scalable algorithm if reprosum_diffmax is exceeded.
      default: .false.
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <!-- =========================== -->
  <!-- group seq_timemgr_inparm    -->
  <!-- =========================== -->

  <entry id="atm_cpl_dt" modify_via_xml="ATM_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      atm coupling interval in seconds
      set via ATM_NCPL in env_run.xml.
      ATM_NCPL is the number of times the atm is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, and has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="lnd_cpl_dt" modify_via_xml="LND_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      lnd coupling interval in seconds
      set via LND_NCPL in env_run.xml.
      LND_NCPL is the number of times the lnd is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="rof_cpl_dt" modify_via_xml="ROF_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      river runoff coupling interval in seconds
      currently set by default to 10800 seconds.
      default: 10800
    </desc>
  </entry>

  <entry id="ice_cpl_dt" modify_via_xml="ICE_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      ice coupling interval in seconds
      set via ICE_NCPL in env_run.xml.
      ICE_NCPL is the number of times the ice is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="ocn_cpl_dt" modify_via_xml="OCN_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      ocn coupling interval in seconds
      set via OCN_NCPL in env_run.xml.
      OCN_NCPL is the number of times the ocn is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="glc_cpl_dt" modify_via_xml="GLC_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>seq_timemgr_inparm</group>
    <desc>
      glc coupling interval in seconds
      set via GLC_NCPL in env_run.xml.
      GLC_NCPL is the number of times the glc is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="glc_avg_period" modify_via_xml="GLC_AVG_PERIOD">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>glc_coupling_period,yearly</valid_values>
    <values>
      <value>$GLC_AVG_PERIOD</value>
    </values>
    <desc>
      Period at which coupler averages fields sent to GLC.
      This supports doing the averaging to GLC less frequently than GLC is called
      (i.e., separating the averaging frequency from the calling frequency).
      This is useful because there are benefits to only averaging the GLC inputs
      as frequently as they are really needed (yearly for CISM), but GLC needs to
      still be called more frequently than that in order to support mid-year restarts.

      Setting glc_avg_period to 'glc_coupling_period' means that the averaging is
      done exactly when the GLC is called (governed by GLC_NCPL).
    </desc>
  </entry>

  <entry id="wav_cpl_dt" modify_via_xml="WAV_NCPL" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      wav coupling interval in seconds
      set via WAV_NCPL in env_run.xml.
      WAV_NCPL is the number of times the wav is coupled per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
    </desc>
  </entry>

  <entry id="esp_cpl_dt" skip_default_entry="true">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      esp run interval in seconds
      esp_cpl_dt is the number of times the esp is run per NCPL_BASE_PERIOD
      NCPL_BASE_PERIOD is set in env_run.xml and is the base period
      associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
      default value set by buildnml to be the pause interval if pause is active
      otherwise, it is set to the shortest component coupling time
    </desc>
    <values>
      <value>-999</value>
    </values>
  </entry>

  <entry id="atm_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      atm coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="lnd_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      lnd coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="ice_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      ice coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="ocn_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      ocn coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="glc_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      glc coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="wav_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      wav coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="esp_cpl_offset">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      esp coupling interval offset in seconds default: 0
    </desc>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="esp_run_on_pause" modify_via_xml="ESP_RUN_ON_PAUSE">
    <type>logical</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      true => ESP component runs after driver 'pause cycle'
      If any component 'pauses' (see PAUSE_OPTION, PAUSE_N and
      PAUSE_COMPONENT_LIST XML variables), the ESP component (if
      present) will be run to process the component 'pause' (restart)
      files and set any required 'resume' signals.
      If true, esp_cpl_dt and esp_cpl_offset settings are ignored.
      default: true
    </desc>
    <values>
      <value>.true.</value>
    </values>
  </entry>

  <entry id="calendar" modify_via_xml="CALENDAR">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>NO_LEAP,GREGORIAN</valid_values>
    <desc>
      calendar in use.  [NO_LEAP, GREOGORIAN].
      set by CALENDAR in env_build.xml
    </desc>
    <values>
      <value>$CALENDAR</value>
    </values>
  </entry>

  <entry id="start_ymd" modify_via_xml="RUN_STARTDATE">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Run start date in yyyymmdd format, only used for startup and hybrid runs.
      default: 00010101
    </desc>
    <values>
      <value>00010101</value>
    </values>
  </entry>

  <entry id="start_tod" modify_via_xml="START_TOD">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Start time-of-day in universal time (seconds), should be between zero and 86400
      default: 0
    </desc>
    <values>
      <value>$START_TOD</value>
    </values>
  </entry>

  <entry id="stop_option" modify_via_xml="STOP_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      sets the run length with stop_n and stop_ymd
      stop_option alarms are:
      [none/never], turns option off
      [nstep/s]   , stops every stop_n nsteps  , relative to current run start time
      [nsecond/s] , stops every stop_n nseconds, relative to current run start time
      [nminute/s] , stops every stop_n nminutes, relative to current run start time
      [nhour/s]   , stops every stop_n nhours  , relative to current run start time
      [nday/s]    , stops every stop_n ndays   , relative to current run start time
      [nmonth/s]  , stops every stop_n nmonths , relative to current run start time
      [monthly/s] , stops every        month   , relative to current run start time
      [nyear/s]   , stops every stop_n nyears  , relative to current run start time
      [date]      , stops at stop_ymd value
      [ifdays0]   , stops at stop_n calendar day value and seconds equal 0
      [end]       , stops at end
    </desc>
    <values>
      <value>$STOP_OPTION</value>
    </values>
  </entry>

  <entry id="stop_n" modify_via_xml="STOP_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets the run length with stop_option and stop_ymd
    </desc>
    <values>
      <value>$STOP_N</value>
    </values>
  </entry>

  <entry id="stop_ymd" modify_via_xml="STOP_YMD">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      date in yyyymmdd format, sets the run length with stop_option and stop_n,
      can be in addition to stop_option and stop_n, negative value implies off
    </desc>
    <values>
      <value>$STOP_DATE</value>
    </values>
  </entry>

  <entry id="restart_file">
    <type>char</type>
    <category>expdef</category>
    <group>DRIVER_attributes</group>
    <valid_values></valid_values>
    <desc>
      Driver restart filename.
      (NOTE: Normally THIS IS NOT USED -- Set with RUN_REFCASE and RUN_REFDATE)
    </desc>
    <values>
      <value>str_undefined</value>
    </values>
  </entry>

  <entry id="restart_option" modify_via_xml="REST_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,monthly,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      sets the restart frequency with restart_n and restart_ymd
      restart_option alarms are:
      [none/never], turns option off
      [nstep/s]   , restarts every restart_n nsteps  , relative to current run start time
      [nsecond/s] , restarts every restart_n nseconds, relative to current run start time
      [nminute/s] , restarts every restart_n nminutes, relative to current run start time
      [nhour/s]   , restarts every restart_n nhours  , relative to current run start time
      [nday/s]    , restarts every restart_n ndays   , relative to current run start time
      [monthly/s] , restarts every           month   , relative to current run start time
      [nmonth/s]  , restarts every restart_n nmonths , relative to current run start time
      [nyear/s]   , restarts every restart_n nyears  , relative to current run start time
      [date]      , restarts at restart_ymd value
      [ifdays0]   , restarts at restart_n calendar day value and seconds equal 0
      [end]       , restarts at end
    </desc>
    <values>
      <value>$REST_OPTION</value>
    </values>
  </entry>

  <entry id="restart_n" modify_via_xml="REST_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets model restart writes with restart_option and restart_ymd (same options as stop_n)
    </desc>
    <values>
      <value>$REST_N</value>
    </values>
  </entry>

  <entry id="restart_ymd" modify_via_xml="REST_YMD">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Date in yyyymmdd format, sets model restart write date with rest_option and restart_n
      default: STOP_N
    </desc>
    <values>
      <value>$REST_DATE</value>
    </values>
  </entry>

  <entry id="end_restart">
    <type>logical</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      true => write restarts at end of run
      forces a restart write at the end of the run in addition to any
      setting associated with rest_option.  default=true.  this setting
      will be set to false if restart_option is none or never.
      default: false
    </desc>
    <values>
      <value>.false.</value>
    </values>
  </entry>

  <entry id="history_option" modify_via_xml="HIST_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      coupler history snapshot option (used with history_n and history_ymd)
      set by HIST_OPTION in env_run.xml.
      history_option alarms are:
      [none/never], turns option off
      [nstep/s]   , history snapshot every history_n nsteps  , relative to current run start time
      [nsecond/s] , history snapshot every history_n nseconds, relative to current run start time
      [nminute/s] , history snapshot every history_n nminutes, relative to current run start time
      [nhour/s]   , history snapshot every history_n nhours  , relative to current run start time
      [nday/s]    , history snapshot every history_n ndays   , relative to current run start time
      [monthly/s] , history snapshot every           month   , relative to current run start time
      [nmonth/s]  , history snapshot every history_n nmonths , relative to current run start time
      [nyear/s]   , history snapshot every history_n nyears  , relative to current run start time
      [date]      , history snapshot at history_ymd value
      [ifdays0]   , history snapshot at history_n calendar day value and seconds equal 0
      [end]       , history snapshot at end
    </desc>
    <values>
      <value>$HIST_OPTION</value>
    </values>
  </entry>

  <entry id="history_n" modify_via_xml="HIST_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      sets coupler snapshot history file frequency (like restart_n)
      set by HIST_N in env_run.xml.
    </desc>
    <values>
      <value>$HIST_N</value>
    </values>
  </entry>

  <entry id="history_ymd" modify_via_xml="HIST_YMD">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      date associated with history_option date.  yyyymmdd format.
      set by HIST_DATE in env_run.xml.
    </desc>
    <values>
      <value>$HIST_DATE</value>
    </values>
  </entry>

  <entry id="histavg_option" modify_via_xml="HISTAVG_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      coupler time average history option (used with histavg_n and histavg_ymd)
      set by AVGHIST_OPTION in env_run.xml.
      histavg_option alarms are:
      [none/never], turns option off
      [nstep/s]   , history snapshot every histavg_n nsteps  , relative to current run start time
      [nsecond/s] , history snapshot every histavg_n nseconds, relative to current run start time
      [nminute/s] , history snapshot every histavg_n nminutes, relative to current run start time
      [nhour/s]   , history snapshot every histavg_n nhours  , relative to current run start time
      [nday/s]    , history snapshot every histavg_n ndays   , relative to current run start time
      [monthly/s] , history snapshot every           month   , relative to current run start time
      [nmonth/s]  , history snapshot every histavg_n nmonths , relative to current run start time
      [nyear/s]   , history snapshot every histavg_n nyears  , relative to current run start time
      [date]      , history snapshot at histavg_ymd value
      [ifdays0]   , history snapshot at histavg_n calendar day value and seconds equal 0
      [end]       , history snapshot at end
    </desc>
    <values>
      <value>$AVGHIST_OPTION</value>
    </values>
  </entry>

  <entry id="histavg_n" modify_via_xml="HISTAVG_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets coupler time-average history file frequency (like restart_option)
      set by AVGHIST_N in env_run.xml.
    </desc>
    <values>
      <value>$AVGHIST_N</value>
    </values>
  </entry>

  <entry id="histavg_ymd" modify_via_xml="HISTAVG_YMD">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      date associated with histavg_option date.  yyyymmdd format.
      set by AVGHIST_DATE in env_run.xml.
    </desc>
    <values>
      <value>$AVGHIST_DATE</value>
    </values>
  </entry>

  <entry id="barrier_option" modify_via_xml="BARRIER_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,monthly,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      sets the driver barrier frequency to sync models across all tasks with barrier_n and barrier_ymd
      barrier_option alarms are like restart_option
      default: never
    </desc>
    <values>
      <value>$BARRIER_OPTION</value>
    </values>
  </entry>

  <entry id="barrier_n" modify_via_xml="BARRIER_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets model barriers with barrier_option and barrier_ymd (same options as stop_n)
      default: 1
    </desc>
    <values>
      <value>$BARRIER_N</value>
    </values>
  </entry>

  <entry id="barrier_ymd" modify_via_xml="BARRIER_DATE">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Date in yyyymmdd format, sets model barriers date with barrier_option and barrier_n
    </desc>
    <values>
      <value>$BARRIER_DATE</value>
    </values>
  </entry>

  <entry id="tprof_option">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <desc>
      Sets timing output file frequency (like rest_option but relative to run start date)
      tprof_option alarms are:
      [none/never], turns option off
      [nstep/s]   , every tprof_n nsteps  , relative to current run start time
      [nsecond/s] , every tprof_n nseconds, relative to current run start time
      [nminute/s] , every tprof_n nminutes, relative to current run start time
      [nhour/s]   , every tprof_n nhours  , relative to current run start time
      [nday/s]    , every tprof_n ndays   , relative to current run start time
      [monthly/s] , every         month   , relative to current run start time
      [nmonth/s]  , every tprof_n nmonths , relative to current run start time
      [nyear/s]   , every tprof_n nyears  , relative to current run start time
      [date]      , at tprof_ymd value
      [ifdays0]   , at tprof_n calendar day value and seconds equal 0
      [end]       , at end
    </desc>
    <values>
      <value>never</value>
    </values>
  </entry>

  <entry id="tprof_n">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets timing output file frequency (like restart_n)
    </desc>
    <values>
      <value>-999</value>
    </values>
  </entry>

  <entry id="tprof_ymd">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      yyyymmdd format, sets timing output file date (like restart_date)
    </desc>
    <values>
      <value>-999</value>
    </values>
  </entry>

  <entry id="pause_option" modify_via_xml="PAUSE_OPTION">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear</valid_values>
    <desc>
      sets the pause frequency with pause_n
      pause_option alarms are:
      [none/never], turns option off
      [nstep/s]   , pauses every pause_n nsteps  , relative to start or last pause time
      [nsecond/s] , pauses every pause_n nseconds, relative to start or last pause time
      [nminute/s] , pauses every pause_n nminutes, relative to start or last pause time
      [nhour/s]   , pauses every pause_n nhours  , relative to start or last pause time
      [nday/s]    , pauses every pause_n ndays   , relative to start or last pause time
      [nmonth/s]  , pauses every pause_n nmonths , relative to start or last pause time
      [monthly/s] , pauses every        month    , relative to start or last pause time
      [nyear/s]   , pauses every pause_n nyears  , relative to start or last pause time
    </desc>
    <values>
      <value>$PAUSE_OPTION</value>
    </values>
  </entry>

  <entry id="pause_n" modify_via_xml="PAUSE_N">
    <type>integer</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      Sets the pause frequency with pause_option
    </desc>
    <values>
      <value>$PAUSE_N</value>
    </values>
  </entry>

  <entry id="pause_component_list" modify_via_xml="PAUSE_COMPONENT_LIST" skip_default_entry="true">
    <type>char</type>
    <category>time</category>
    <group>DRIVER_attributes</group>
    <desc>
      A colon-separated list of component types (e.g., ocn,atm) to receive a
      resume signal after a pause has happened. Special values "all" or "none"
      may be used in place of a list
    </desc>
    <values>
      <value>$PAUSE_COMPONENT_LIST</value>
    </values>
  </entry>

  <entry id="logfilepostfix">
    <type>char</type>
    <category>driver</category>
    <group>DRIVER_attributes</group>
    <valid_values></valid_values>
    <desc>
      Ending suffix "postfix" for output log files.
    </desc>
    <values>
      <value>.log</value>
    </values>
  </entry>

  <entry id="outpathroot">
    <type>char</type>
    <category>drv_history</category>
    <group>DRIVER_attributes</group>
    <valid_values></valid_values>
    <desc>
      Root directory for driver output files
    </desc>
    <values>
      <value>./</value>
    </values>
  </entry>

  <entry id="max_cplstep_time">
    <type>real</type>
    <category>driver</category>
    <group>DRIVER_attributes</group>
    <desc>
      Abort model if coupler timestep wallclock time exceeds this value, ignored if 0,
      if &lt; 0 then use abs(max_cplstep_time)*cktime as the threshold.
      default: 0
    </desc>
    <values>
      <value>0.0</value>
    </values>
  </entry>

  <!-- =========================== -->
  <!-- category pe-layouts         -->
  <!-- =========================== -->

  <entry id="atm_ntasks" modify_via_xml="NTASKS_ATM">
    <type>integer</type>
    <category>pe_layouts</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the atm components.
      set by NTASKS_ATM in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_ATM</value>
    </values>
  </entry>

  <entry id="atm_nthreads" modify_via_xml="NTHRDS_ATM">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the atm component.
      set by NTHRDS_ATM in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_ATM</value>
    </values>
  </entry>

  <entry id="atm_rootpe" modify_via_xml="ROOTPE_ATM">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the atm component.
      set by ROOTPE_ATM in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_ATM</value>
    </values>
  </entry>

  <entry id="atm_pestride" modify_via_xml="PSTRID_ATM">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the atm component.
      set by PSTRID_ATM in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_ATM</value>
    </values>
  </entry>

  <entry id="atm_layout" modify_via_xml="NINST_ATM_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance atms (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_ATM_LAYOUT</value>
    </values>
  </entry>

  <entry id="lnd_ntasks" modify_via_xml="NTASKS_LND">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the lnd components.
      set by NTASKS_LND in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_LND</value>
    </values>
  </entry>

  <entry id="lnd_nthreads" modify_via_xml="NTHRDS_LND">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the lnd component.
      set by NTHRDS_LND in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_LND</value>
    </values>
  </entry>

  <entry id="lnd_rootpe" modify_via_xml="ROOTPE_LND">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the lnd component.
      set by ROOTPE_LND in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_LND</value>
    </values>
  </entry>

  <entry id="lnd_pestride" modify_via_xml="PSTRID_LND">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the lnd component.
      set by PSTRID_LND in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_LND</value>
    </values>
  </entry>

  <entry id="lnd_layout" modify_via_xml="NINST_LND_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance lnds (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_LND_LAYOUT</value>
    </values>
  </entry>

  <entry id="ice_ntasks" modify_via_xml="NTASKS_ICE">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the ice components.
      set by NTASKS_ICE in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_ICE</value>
    </values>
  </entry>

  <entry id="ice_nthreads" modify_via_xml="NTHRDS_ICE">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the ice component.
      set by NTHRDS_ICE in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_ICE</value>
    </values>
  </entry>

  <entry id="ice_rootpe" modify_via_xml="ROOTPE_ICE">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the ice component.
      set by ROOTPE_ICE in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_ICE</value>
    </values>
  </entry>

  <entry id="ice_pestride" modify_via_xml="PSTRID_ICE">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the ice component.
      set by PSTRID_ICE in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_ICE</value>
    </values>
  </entry>

  <entry id="ice_layout" modify_via_xml="NINST_ICE_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance ices (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_ICE_LAYOUT</value>
    </values>
  </entry>

  <entry id="ocn_ntasks" modify_via_xml="NTASKS_OCN">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the ocn components.
      set by NTASKS_OCN in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_OCN</value>
    </values>
  </entry>

  <entry id="ocn_nthreads" modify_via_xml="NTHRDS_OCN">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the ocn component.
      set by NTHRDS_OCN in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_OCN</value>
    </values>
  </entry>

  <entry id="ocn_rootpe" modify_via_xml="ROOTPE_OCN">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the ocn component.
      set by ROOTPE_OCN in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_OCN</value>
    </values>
  </entry>

  <entry id="ocn_pestride" modify_via_xml="PSTRID_OCN">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the ocn component.
      set by PSTRID_OCN in env_configure.xml.  default: 1
    </desc>
    <values>
      <value>$PSTRID_OCN</value>
    </values>
  </entry>

  <entry id="ocn_layout" modify_via_xml="NINST_OCN_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance ocns (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_OCN_LAYOUT</value>
    </values>
  </entry>

  <entry id="glc_ntasks" modify_via_xml="NTASKS_GLC">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the glc components.
      set by NTASKS_GLC in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_GLC</value>
    </values>
  </entry>

  <entry id="glc_nthreads" modify_via_xml="NTHRDS_GLC">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the glc component.
      set by NTHRDS_GLC in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_GLC</value>
    </values>
  </entry>

  <entry id="glc_rootpe" modify_via_xml="ROOTPE_GLC">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the glc component.
      set by ROOTPE_GLC in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_GLC</value>
    </values>
  </entry>

  <entry id="glc_pestride" modify_via_xml="PSTRID_GLC">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the glc component.
      set by PSTRID_GLC in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_GLC</value>
    </values>
  </entry>

  <entry id="glc_layout" modify_via_xml="NINST_GLC_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance glcs (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_GLC_LAYOUT</value>
    </values>
  </entry>

  <entry id="wav_ntasks" modify_via_xml="NTASKS_WAV">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the wav components.
      set by NTASKS_WAV in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_WAV</value>
    </values>
  </entry>

  <entry id="wav_nthreads" modify_via_xml="NTHRDS_WAV">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the wav component.
      set by NTHRDS_WAV in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_WAV</value>
    </values>
  </entry>

  <entry id="wav_rootpe" modify_via_xml="ROOTPE_WAV">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the wav component.
      set by ROOTPE_WAV in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_WAV</value>
    </values>
  </entry>

  <entry id="wav_pestride" modify_via_xml="PSTRID_WAV">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the wav component.
      set by PSTRID_WAV in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_WAV</value>
    </values>
  </entry>

  <entry id="wav_layout" modify_via_xml="NINST_WAV_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance wavs (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_WAV_LAYOUT</value>
    </values>
  </entry>

  <entry id="rof_ntasks" modify_via_xml="NTASKS_ROF">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the lnd components.
      set by NTASKS_LND in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_ROF</value>
    </values>
  </entry>

  <entry id="rof_nthreads" modify_via_xml="NTHRDS_ROF">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the lnd component.
      set by NTHRDS_ROF in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_ROF</value>
    </values>
  </entry>

  <entry id="rof_rootpe" modify_via_xml="ROOTPE_ROF">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the lnd component.
      set by ROOTPE_LND in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_ROF</value>
    </values>
  </entry>

  <entry id="rof_pestride" modify_via_xml="PSTRID_ROF">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the lnd component.
      set by PSTRID_LND in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_ROF</value>
    </values>
  </entry>

  <entry id="rof_layout" modify_via_xml="NINST_ROF_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance lnds (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_ROF_LAYOUT</value>
    </values>
  </entry>

  <entry id="esp_ntasks" modify_via_xml="NTASKS_ESP">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the esp components.
      set by NTASKS_ESP in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_ESP</value>
    </values>
  </entry>

  <entry  id="esp_nthreads" modify_via_xml="NTHRDS_ESP">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the esp component.
      set by NTHRDS_ESP in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_ESP</value>
    </values>
  </entry>

  <entry  id="esp_rootpe" modify_via_xml="ROOTPE_ESP">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the esp component.
      set by ROOTPE_ESP in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_ESP</value>
    </values>
  </entry>

  <entry  id="esp_pestride" modify_via_xml="PSTRID_ESP">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the esp component.
      set by PSTRID_ESP in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_ESP</value>
    </values>
  </entry>

  <entry  id="esp_layout" modify_via_xml="NINST_ESP_LAYOUT">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <valid_values>concurrent,sequential</valid_values>
    <desc>
      Layout of multi-instance external system processor (if there are more than 1)
    </desc>
    <values>
      <value>$NINST_ESP_LAYOUT</value>
    </values>
  </entry>

  <entry  id="cpl_ntasks" modify_via_xml="NTASKS_CPL">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of mpi tasks assigned to the cpl components.
      set by NTASKS_CPL in env_configure.xml.
    </desc>
    <values>
      <value>$NTASKS_CPL</value>
    </values>
  </entry>

  <entry id="cpl_nthreads" modify_via_xml="NTHRDS_CPL">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the number of threads per mpi task for the cpl component.
      set by NTHRDS_CPL in env_configure.xml.
    </desc>
    <values>
      <value>$NTHRDS_CPL</value>
    </values>
  </entry>

  <entry id="cpl_rootpe" modify_via_xml="ROOTPE_CPL">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the global mpi task rank of the root processor assigned to the cpl component.
      set by ROOTPE_CPL in env_configure.xml.
    </desc>
    <values>
      <value>$ROOTPE_CPL</value>
    </values>
  </entry>

  <entry id="cpl_pestride" modify_via_xml="PSTRID_CPL">
    <type>integer</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      the mpi global processors stride associated with the mpi tasks for the cpl component.
      set by PSTRID_CPL in env_configure.xml.
    </desc>
    <values>
      <value>$PSTRID_CPL</value>
    </values>
  </entry>

  <entry id="esmf_logging" modify_via_xml="ESMF_LOGFILE_KIND">
    <type>char</type>
    <category>ccsm_pes</category>
    <group>DRIVER_attributes</group>
    <desc>
      Determines what ESMF log files (if any) are generated when
          USE_ESMF_LIB is TRUE. 
      ESMF_LOGKIND_SINGLE: Use a single log file, combining messages from
          all of the PETs. Not supported on some platforms.
      ESMF_LOGKIND_MULTI: Use multiple log files — one per PET.
      ESMF_LOGKIND_NONE: Do not issue messages to a log file.
      By default, no ESMF log files are generated.
    </desc>
    <values>
      <value>$ESMF_LOGFILE_KIND</value>
    </values>
  </entry>

  <!-- NUOPC generic input -->

  <entry id="Profiling@DRIVER_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>DRIVER_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="MED_model">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>cesm</value>
    </values>
  </entry>

  <entry id="Verbosity@MED_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>MED_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="ATM_model" modify_via_xml="COMP_ATM">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>$COMP_ATM</value>
    </values>
  </entry>

  <entry id="Verbosity@ATM_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>ATM_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="OCN_model" modify_via_xml="COMP_OCN">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>$COMP_OCN</value>
    </values>
  </entry>

  <entry id="Verbosity@OCN_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>OCN_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="ICE_model" modify_via_xml="COMP_ICE">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>$COMP_ICE</value>
    </values>
  </entry>

  <entry id="Verbosity@ICE_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>ICE_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="ROF_model" modify_via_xml="COMP_ROF">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>$COMP_ROF</value>
    </values>
  </entry>

  <entry id="Verbosity@ROF_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>ROF_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="LND_model" modify_via_xml="COMP_LND">
    <type>char</type>
    <category>nuopc</category>
    <group>nuopc_var</group>
    <values>
      <value>$COMP_LND</value>
    </values>
  </entry>

  <entry id="Verbosity@LND_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>LND_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="Verbosity@LND_attributes">
    <type>char</type>
    <category>nuopc</category>
    <group>LND_attributes</group>
    <values>
      <value>0</value>
    </values>
  </entry>

  <entry id="runSeq">
    <type>char</type>
    <category>nuopc_attribute</category>
    <group>nuopc_runseq</group>
    <values>
      <value>
      @86400             # 1 day time step
	  MED med_phases_prep_ocn
	  MED med_connectors_prep_med2ocn
	  MED -> OCN :remapMethod=redist
	  OCN
	  @48          # 30min time step
            MED med_phases_prep_ice
            MED med_connectors_prep_med2ice
            MED -> ICE :remapMethod=redist
            MED med_phases_prep_lnd
            MED med_connectors_prep_med2lnd
            MED -> LND :remapMethod=redist
            MED med_phases_prep_rof
            MED med_connectors_prep_med2rof
            MED -> ROF :remapMethod=redist
            ICE
            LND
            ROF
            ROF -> MED :remapMethod=redist
            MED med_connectors_post_rof2med
            LND -> MED :remapMethod=redist
            MED med_connectors_post_lnd2med
            ICE -> MED :remapMethod=redist
            MED med_connectors_post_ice2med
            MED med_phases_prep_atm
            MED med_connectors_prep_med2atm
            MED -> ATM :remapMethod=redist
            ATM
            ATM -> MED :remapMethod=redist
            MED med_connectors_post_atm2med
            MED med_phases_accum_fast
	  @
  	  OCN -> MED :remapMethod=redist
	  MED med_connectors_post_ocn2med
      @
      </value>
    </values>
  </entry>

</entry_id>
